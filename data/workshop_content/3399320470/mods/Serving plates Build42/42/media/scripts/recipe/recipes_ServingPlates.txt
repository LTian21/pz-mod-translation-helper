module ServingPlatesB42
{
    craftRecipe Make1PlateFromPan
    {
        timedAction = EmptyPan,
        Time = 20,
        OnCreate = Recipe.OnCreate.MakeDynamicPlates,
        ToolTip = Portion the meal for a lone survivor.,
        Tags = InHandCraft;Cooking,
        category = Cooking,
        inputs
        {
            item 1 [Base.Plate] mappers[PlateType;PanType],
            item 1 [Base.PanFriedVegetables2;Base.PanFriedVegetablesForged;Base.PanFriedVegetables;Base.GriddlePanFriedVegetables;Base.OmeletteRecipeForged;Base.OmeletteRecipe] mappers[PlateType;PanType] flags[InheritCondition;InheritCooked;InheritFoodAge;ItemCount],
        }
        outputs
        {
            item 1 mapper:PlateType,
            item 1 mapper:PanType,
        }
        itemMapper PlateType
        {
            ServingPlatesB42.PlateRoasted = Base.PanFriedVegetables2,
            ServingPlatesB42.PlateStirFry = Base.PanFriedVegetablesForged,
            ServingPlatesB42.PlateStirFry = Base.PanFriedVegetables,
            ServingPlatesB42.PlateStirFry = Base.GriddlePanFriedVegetables,
            ServingPlatesB42.PlateOmelette = Base.OmeletteRecipeForged,
            ServingPlatesB42.PlateOmelette = Base.OmeletteRecipe,
        }
        itemMapper PanType
        {
            Base.RoastingPan = Base.PanFriedVegetables2,
            Base.PanForged = Base.PanFriedVegetablesForged,
            Base.Pan = Base.PanFriedVegetables,
            Base.GridlePan = Base.GriddlePanFriedVegetables,
            Base.Pan = Base.OmeletteRecipe,
            Base.PanForged = Base.OmeletteRecipeForged,
        }
    }

    craftRecipe Make2PlatesFromPan
    {
        timedAction = EmptyPan,
        Time = 40,
        OnCreate = Recipe.OnCreate.MakeDynamicPlates,
        ToolTip = Split the meal to share or save for later.,
        Tags = InHandCraft;Cooking,
        category = Cooking,
        inputs
        {
            item 2 [Base.Plate] mappers[PlateType;PanType],
            item 1 [Base.PanFriedVegetables2;Base.PanFriedVegetablesForged;Base.PanFriedVegetables;Base.GriddlePanFriedVegetables;Base.OmeletteRecipeForged;Base.OmeletteRecipe] mappers[PlateType;PanType] flags[InheritCondition;InheritCooked;InheritFoodAge;ItemCount],
        }
        outputs
        {
            item 2 mapper:PlateType,
            item 1 mapper:PanType,
        }
        itemMapper PlateType
        {
            ServingPlatesB42.PlateRoasted = Base.PanFriedVegetables2,
            ServingPlatesB42.PlateStirFry = Base.PanFriedVegetablesForged,
            ServingPlatesB42.PlateStirFry = Base.PanFriedVegetables,
            ServingPlatesB42.PlateStirFry = Base.GriddlePanFriedVegetables,
            ServingPlatesB42.PlateOmelette = Base.OmeletteRecipeForged,
            ServingPlatesB42.PlateOmelette = Base.OmeletteRecipe,
        }
        itemMapper PanType
        {
            Base.RoastingPan = Base.PanFriedVegetables2,
            Base.PanForged = Base.PanFriedVegetablesForged,
            Base.Pan = Base.PanFriedVegetables,
            Base.GridlePan = Base.GriddlePanFriedVegetables,
            Base.Pan = Base.OmeletteRecipe,
            Base.PanForged = Base.OmeletteRecipeForged,
        }
    }

    craftRecipe Make3PlatesFromPan
    {
        timedAction = EmptyPan,
        Time = 60,
        OnCreate = Recipe.OnCreate.MakeDynamicPlates,
        ToolTip = Divide the meal for sharing or cautious storage.,
        Tags = InHandCraft;Cooking,
        category = Cooking,
        inputs
        {
            item 3 [Base.Plate] mappers[PlateType;PanType],
            item 1 [Base.PanFriedVegetables2;Base.PanFriedVegetablesForged;Base.PanFriedVegetables;Base.GriddlePanFriedVegetables;Base.OmeletteRecipeForged;Base.OmeletteRecipe] mappers[PlateType;PanType] flags[InheritCondition;InheritCooked;InheritFoodAge;ItemCount],
        }
        outputs
        {
            item 3 mapper:PlateType,
            item 1 mapper:PanType,
        }
        itemMapper PlateType
        {
            ServingPlatesB42.PlateRoasted = Base.PanFriedVegetables2,
            ServingPlatesB42.PlateStirFry = Base.PanFriedVegetablesForged,
            ServingPlatesB42.PlateStirFry = Base.PanFriedVegetables,
            ServingPlatesB42.PlateStirFry = Base.GriddlePanFriedVegetables,
            ServingPlatesB42.PlateOmelette = Base.OmeletteRecipeForged,
            ServingPlatesB42.PlateOmelette = Base.OmeletteRecipe,
        }
        itemMapper PanType
        {
            Base.RoastingPan = Base.PanFriedVegetables2,
            Base.PanForged = Base.PanFriedVegetablesForged,
            Base.Pan = Base.PanFriedVegetables,
            Base.GridlePan = Base.GriddlePanFriedVegetables,
            Base.Pan = Base.OmeletteRecipe,
            Base.PanForged = Base.OmeletteRecipeForged,
        }
    }

    craftRecipe Make4PlatesFromPan
    {
        timedAction = EmptyPan,
        Time = 80,
        OnCreate = Recipe.OnCreate.MakeDynamicPlates,
        ToolTip = Ration the meal into four portions to sustain a group or store for the harsh winter ahead.,
        Tags = InHandCraft;Cooking,
        category = Cooking,
        inputs
        {
            item 4 [Base.Plate] mappers[PlateType;PanType],
            item 1 [Base.PanFriedVegetables2;Base.PanFriedVegetablesForged;Base.PanFriedVegetables;Base.GriddlePanFriedVegetables;Base.OmeletteRecipeForged;Base.OmeletteRecipe] mappers[PlateType;PanType] flags[InheritCondition;InheritCooked;InheritFoodAge;ItemCount],
        }
        outputs
        {
            item 4 mapper:PlateType,
            item 1 mapper:PanType,
        }
        itemMapper PlateType
        {
            ServingPlatesB42.PlateRoasted = Base.PanFriedVegetables2,
            ServingPlatesB42.PlateStirFry = Base.PanFriedVegetablesForged,
            ServingPlatesB42.PlateStirFry = Base.PanFriedVegetables,
            ServingPlatesB42.PlateStirFry = Base.GriddlePanFriedVegetables,
            ServingPlatesB42.PlateOmelette = Base.OmeletteRecipeForged,
            ServingPlatesB42.PlateOmelette = Base.OmeletteRecipe,
        }
        itemMapper PanType
        {
            Base.RoastingPan = Base.PanFriedVegetables2,
            Base.PanForged = Base.PanFriedVegetablesForged,
            Base.Pan = Base.PanFriedVegetables,
            Base.GridlePan = Base.GriddlePanFriedVegetables,
            Base.Pan = Base.OmeletteRecipe,
            Base.PanForged = Base.OmeletteRecipeForged,
        }
    }

    craftRecipe Make1ClayPlateFromPan
    {
        timedAction = EmptyPan,
        Time = 20,
        OnCreate = Recipe.OnCreate.MakeDynamicPlates,
        ToolTip = Portion the meal for a lone survivor.,
        Tags = InHandCraft;Cooking,
        category = Cooking,
        inputs
        {
            item 1 [Base.ClayPlate] mappers[PlateType;PanType],
            item 1 [Base.PanFriedVegetables2;Base.PanFriedVegetablesForged;Base.PanFriedVegetables;Base.GriddlePanFriedVegetables;Base.OmeletteRecipeForged;Base.OmeletteRecipe] mappers[PlateType;PanType] flags[InheritCondition;InheritCooked;InheritFoodAge;ItemCount],
        }
        outputs
        {
            item 1 mapper:PlateType,
            item 1 mapper:PanType,
        }
        itemMapper PlateType
        {
            ServingPlatesB42.ClayPlateRoasted = Base.PanFriedVegetables2,
            ServingPlatesB42.ClayPlateStirFry = Base.PanFriedVegetablesForged,
            ServingPlatesB42.ClayPlateStirFry = Base.PanFriedVegetables,
            ServingPlatesB42.ClayPlateStirFry = Base.GriddlePanFriedVegetables,
            ServingPlatesB42.ClayPlateOmelette = Base.OmeletteRecipeForged,
            ServingPlatesB42.ClayPlateOmelette = Base.OmeletteRecipe,
        }
        itemMapper PanType
        {
            Base.RoastingPan = Base.PanFriedVegetables2,
            Base.PanForged = Base.PanFriedVegetablesForged,
            Base.Pan = Base.PanFriedVegetables,
            Base.GridlePan = Base.GriddlePanFriedVegetables,
            Base.Pan = Base.OmeletteRecipe,
            Base.PanForged = Base.OmeletteRecipeForged,
        }
    }

    craftRecipe Make2ClayPlatesFromPan
    {
        timedAction = EmptyPan,
        Time = 40,
        OnCreate = Recipe.OnCreate.MakeDynamicPlates,
        ToolTip = Split the meal to share or save for later.,
        Tags = InHandCraft;Cooking,
        category = Cooking,
        inputs
        {
            item 2 [Base.ClayPlate] mappers[PlateType;PanType],
            item 1 [Base.PanFriedVegetables2;Base.PanFriedVegetablesForged;Base.PanFriedVegetables;Base.GriddlePanFriedVegetables;Base.OmeletteRecipeForged;Base.OmeletteRecipe] mappers[PlateType;PanType] flags[InheritCondition;InheritCooked;InheritFoodAge;ItemCount],
        }
        outputs
        {
            item 2 mapper:PlateType,
            item 1 mapper:PanType,
        }
        itemMapper PlateType
        {
            ServingPlatesB42.ClayPlateRoasted = Base.PanFriedVegetables2,
            ServingPlatesB42.ClayPlateStirFry = Base.PanFriedVegetablesForged,
            ServingPlatesB42.ClayPlateStirFry = Base.PanFriedVegetables,
            ServingPlatesB42.ClayPlateStirFry = Base.GriddlePanFriedVegetables,
            ServingPlatesB42.ClayPlateOmelette = Base.OmeletteRecipeForged,
            ServingPlatesB42.ClayPlateOmelette = Base.OmeletteRecipe,
        }
        itemMapper PanType
        {
            Base.RoastingPan = Base.PanFriedVegetables2,
            Base.PanForged = Base.PanFriedVegetablesForged,
            Base.Pan = Base.PanFriedVegetables,
            Base.GridlePan = Base.GriddlePanFriedVegetables,
            Base.Pan = Base.OmeletteRecipe,
            Base.PanForged = Base.OmeletteRecipeForged,
        }
    }

    craftRecipe Make3ClayPlatesFromPan
    {
        timedAction = EmptyPan,
        Time = 60,
        OnCreate = Recipe.OnCreate.MakeDynamicPlates,
        ToolTip = Divide the meal for sharing or cautious storage.,
        Tags = InHandCraft;Cooking,
        category = Cooking,
        inputs
        {
            item 3 [Base.ClayPlate] mappers[PlateType;PanType],
            item 1 [Base.PanFriedVegetables2;Base.PanFriedVegetablesForged;Base.PanFriedVegetables;Base.GriddlePanFriedVegetables;Base.OmeletteRecipeForged;Base.OmeletteRecipe] mappers[PlateType;PanType] flags[InheritCondition;InheritCooked;InheritFoodAge;ItemCount],
        }
        outputs
        {
            item 3 mapper:PlateType,
            item 1 mapper:PanType,
        }
        itemMapper PlateType
        {
            ServingPlatesB42.ClayPlateRoasted = Base.PanFriedVegetables2,
            ServingPlatesB42.ClayPlateStirFry = Base.PanFriedVegetablesForged,
            ServingPlatesB42.ClayPlateStirFry = Base.PanFriedVegetables,
            ServingPlatesB42.ClayPlateStirFry = Base.GriddlePanFriedVegetables,
            ServingPlatesB42.ClayPlateOmelette = Base.OmeletteRecipeForged,
            ServingPlatesB42.ClayPlateOmelette = Base.OmeletteRecipe,
        }
        itemMapper PanType
        {
            Base.RoastingPan = Base.PanFriedVegetables2,
            Base.PanForged = Base.PanFriedVegetablesForged,
            Base.Pan = Base.PanFriedVegetables,
            Base.GridlePan = Base.GriddlePanFriedVegetables,
            Base.Pan = Base.OmeletteRecipe,
            Base.PanForged = Base.OmeletteRecipeForged,
        }
    }

    craftRecipe Make4ClayPlatesFromPan
    {
        timedAction = EmptyPan,
        Time = 80,
        OnCreate = Recipe.OnCreate.MakeDynamicPlates,
        ToolTip = Ration the meal into four portions to sustain a group or store for the harsh winter ahead.,
        Tags = InHandCraft;Cooking,
        category = Cooking,
        inputs
        {
            item 4 [Base.ClayPlate] mappers[PlateType;PanType],
            item 1 [Base.PanFriedVegetables2;Base.PanFriedVegetablesForged;Base.PanFriedVegetables;Base.GriddlePanFriedVegetables;Base.OmeletteRecipeForged;Base.OmeletteRecipe;Base.OmeletteRecipeForged;Base.OmeletteRecipe] mappers[PlateType;PanType] flags[InheritCondition;InheritCooked;InheritFoodAge;ItemCount],
        }
        outputs
        {
            item 4 mapper:PlateType,
            item 1 mapper:PanType,
        }
        itemMapper PlateType
        {
            ServingPlatesB42.ClayPlateRoasted = Base.PanFriedVegetables2,
            ServingPlatesB42.ClayPlateStirFry = Base.PanFriedVegetablesForged,
            ServingPlatesB42.ClayPlateStirFry = Base.PanFriedVegetables,
            ServingPlatesB42.ClayPlateStirFry = Base.GriddlePanFriedVegetables,
            ServingPlatesB42.ClayPlateOmelette = Base.OmeletteRecipeForged,
            ServingPlatesB42.ClayPlateOmelette = Base.OmeletteRecipe,
        }
        itemMapper PanType
        {
            Base.RoastingPan = Base.PanFriedVegetables2,
            Base.PanForged = Base.PanFriedVegetablesForged,
            Base.Pan = Base.PanFriedVegetables,
            Base.GridlePan = Base.GriddlePanFriedVegetables,
            Base.Pan = Base.OmeletteRecipe,
            Base.PanForged = Base.OmeletteRecipeForged,
        }
    }
}